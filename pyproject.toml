[build-system]
requires = ["setuptools >= 61.0", "wheel", "build", "loguru"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-data]
guidellm = ["*"]


# ************************************************
# ********** Project Metadata **********
# ************************************************

[project]
name = "guidellm"
dynamic = ["version"]
description = "Guidance platform for deploying and managing large language models."
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8.0,<4.0"
license = { file = "LICENSE" }
authors = [ { name = "Neuralmagic, Inc." } ]
urls = { homepage = "https://github.com/neuralmagic/guidellm" }
dependencies = [
    "click",
    "datasets",
    "loguru",
    "numpy",
    "openai",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "requests",
    "transformers",
]

[project.optional-dependencies]
dev = [
    # general and configurations
    "pre-commit~=3.5.0",
    "sphinx~=7.1.2",
    "tox~=4.16.0",

    # testing
    "pytest~=8.2.2",
    "pytest-cov~=5.0.0",
    "pytest-mock~=3.14.0",

    # code quality
    "mypy~=1.10.1",
    "ruff~=0.5.2",

    # type-checking
    "types-click~=7.1.8",
    "types-PyYAML~=6.0.1",
    "types-requests~=2.32.0",
    "types-toml",
]


[project.entry-points.console_scripts]
guidellm = "guidellm.main:main"


[tool.setuptools.dynamic]
version = {attr = "guidellm.__version__"}


# ************************************************
# ********** Code Quality Tools **********
# ************************************************

[tool.black]
line-length = 88
target-version = ['py38']


[tool.isort]
profile = "black"


[tool.mypy]
files = ["src/guidellm", "tests"]
python_version = '3.8'
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = ["venv", ".tox"]

# Silence "type import errors" as our 3rd-party libs does not have types
# Check: https://mypy.readthedocs.io/en/latest/config_file.html#import-discovery
follow_imports = 'silent'

[[tool.mypy.overrides]]
module = ["transformers.*", "datasets.*"]
ignore_missing_imports=true


[tool.ruff]
line-length = 88
exclude = ["build", "dist", "env", ".venv"]
lint.select = ["E", "F", "W"]


[tool.pytest.ini_options]
addopts = '-s -vvv --cache-clear'
markers = [
    "smoke: quick tests to check basic functionality",
    "sanity: detailed tests to ensure major functions work correctly",
    "regression: tests to ensure that new changes do not break existing functionality"
]
